generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DatabaseURL")
}

model User {
  id       String    @id @map("_id")
  flag     BigInt    @default(1)
  nickname String?
  lang     String    @default("ko")
  factory  Factory[]
}

model Guild {
  id        String @id @map("_id")
  name      String
  lang      String @default("ko")
  tax       Float  @default(0)
  globalExp Float  @default(0)
  flag      Float  @default(1)
}

model Stock {
  id          String   @id @map("_id")
  name        String
  price       BigInt   @default(1000)
  latestPrice BigInt[] @default([])
  boughtCount Float    @default(0)
  soldCount   Float    @default(0)
}

model Factory {
  id      String   @id @map("_id")
  ownerId String
  owners  String[] @default([])
  exp     Float    @default(0)
  type    BigInt
  flag    BigInt   @default(1)
  workers Worker[]
  items   Item[]
  owner   User     @relation(fields: [ownerId], references: [id])
}

model Item {
  id        String  @id @map("_id")
  factoryId String
  name      String
  count     Float   @default(0)
  price     Float   @default(0)
  flag      BigInt  @default(1)
  factory   Factory @relation(fields: [factoryId], references: [id])
}

model Worker {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  factoryId  String?
  flag       BigInt      @default(1)
  name       String
  job        String
  exp        Float       @default(0)
  attributes Attributes?
  factory    Factory?    @relation(fields: [factoryId], references: [id])
}

type Attributes {
  // 달리기
  athletics Float @default(0)
  // 힘
  strength  Float @default(0)
  // 작동
  machinery Float @default(0)
}

model Notice {
  id          String   @id @default(uuid()) @map("_id")
  title       String
  description String
  postedAt    DateTime @default(now())
  updatedAt   DateTime @updatedAt()
}

enum FactoryStatus {
  Closed
  Opened
}
